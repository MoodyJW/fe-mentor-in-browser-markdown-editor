// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
@use "@angular/material" as mat;
// Plus imports for other components in your app.

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat.core();

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
$fe-mentor-in-browser-markdown-editor-primary: mat.define-palette(
  mat.$indigo-palette
);
$fe-mentor-in-browser-markdown-editor-accent: mat.define-palette(
  mat.$pink-palette,
  A200,
  A100,
  A400
);

// The warn palette is optional (defaults to red).
$fe-mentor-in-browser-markdown-editor-warn: mat.define-palette(
  mat.$red-palette
);

// Create the theme object. A theme consists of configurations for individual
// theming systems such as "color" or "typography".
$fe-mentor-in-browser-markdown-editor-theme: mat.define-light-theme(
  (
    color: (
      primary: $fe-mentor-in-browser-markdown-editor-primary,
      accent: $fe-mentor-in-browser-markdown-editor-accent,
      warn: $fe-mentor-in-browser-markdown-editor-warn,
    ),
  )
);

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include mat.all-component-themes($fe-mentor-in-browser-markdown-editor-theme);

$breakpoints: (
  "mobile": (
    min-width: 375px,
  ),
  "tablet": (
    min-width: 700px,
  ),
  "desktop": (
    min-width: 1000px,
  ),
) !default;

@mixin respond-to($breakpoint) {
  @if map-has-key($breakpoints, $breakpoint) {
    @media #{inspect(map-get($breakpoints, $breakpoint))} {
      @content;
    }
  } @else {
    @warn "no value from `#{$breakpoint}`. "
        + "available: #{map-keys($breakpoints)}.";
  }
}

:root {
  --primary-text: hsla(216, 9%, 23%, 1);
  --subdued-text: hsla(216, 4%, 51%, 1);
  --header-text: hsla(216, 9%, 23%, 1);
  --primary-bg: hsla(0, 0%, 100%, 1);
  --secondary-bg: hsla(0, 0%, 96%, 1);
  --sidenav-bg: hsla(216, 8%, 12%, 1);
  --toolbar-bg: hsla(220, 7%, 18%, 1);
  --orange: hsla(13, 75%, 58%, 1);
  --cancel-bg: hsla(216, 9%, 23%, 1);
  --section-title-bar-bg: hsla(0, 0%, 96%, 1);
  --text-block-bg: hsla(0, 0%, 96%, 1);
  --divider: hsla(0, 0%, 90%, 1);
  --theme-toggle-bg: hsla(216, 8%, 38%, 1);

  .dark-theme {
    --primary-text: hsla(222, 9%, 78%, 1);
    --subdued-text: hsla(222, 9%, 78%, 1);
    --header-text: hsla(0, 0%, 100%, 1);
    --primary-bg: hsla(225, 9%, 9%, 1);
    --secondary-bg: hsla(220, 7%, 18%, 1);
    --section-title-bar-bg: hsla(216, 8%, 12%, 1);
    --text-block-bg: hsla(220, 7%, 18%, 1);
    --divider: hsla(216, 8%, 38%, 1);
  }
}

* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

html {
  height: 100%;
}

body {
  font-family: "Roboto Mono", monospace;
  font-weight: 400;
  font-size: 14px;
  line-height: 24px;
  color: var(--primary-text);
  transition-duration: 500ms;
  -webkit-font-smoothing: auto;
  -moz-osx-font-smoothing: auto;

  .roboto-mono {
    font-family: "Roboto Mono", monospace;
  }

  .roboto-slab {
    font-family: "Roboto Slab", serif;
  }
}
